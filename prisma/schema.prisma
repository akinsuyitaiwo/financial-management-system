// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid())
  name     String
  email    String  @unique
  password String
  groupId     String
  refreshToken String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  transactions Transaction[] @relation("CreatedBy")
  updatedTransaction Transaction[] @relation("UpdatedBy")
  deletedTransaction Transaction[] @relation("DeletedBy")
 group       Group?    @relation(fields: [groupId], references: [id])
}

model Transaction {
  id          String    @id @default(uuid())
  amount      Float
  description String
  category    String
  date        DateTime  @default(now())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  createdBy   User      @relation("CreatedBy", fields: [createdById], references: [id])
  createdById String
  updatedBy   User?     @relation("UpdatedBy", fields: [updatedById], references: [id])
  updatedById String?
  deletedBy   User?     @relation("DeletedBy", fields: [deletedById], references: [id])
  deletedById String?
  group       Group?    @relation(fields: [groupId], references: [id])
  groupId     String
}

model Group {
  id          String    @id @default(uuid())
  name        String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  users       User[] 
  transactions Transaction[] 
}

